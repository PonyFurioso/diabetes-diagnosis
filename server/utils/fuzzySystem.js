const nools = require('nools');

const { Trapezoid, Triangle } = require('./Shapes');
const { descriptions } = require('./utilities');

// Arreglo donde se mostraran las reglas seleccionadas del difuso
let activadas = [];

// Arreglos donde se guardaran los datos de las graficas
let peso = [];
let glucoPre = [];
let glucoPost = [];
let glucoCapi = [];
let hemoGli = [];

// Se crean las figuras y se guardan en los arreglos
glucoPre.push(new Trapezoid(0, 50, 80, 100), new Trapezoid(80, 100, 125, 140), new Trapezoid(125, 140, 400, 500));
glucoCapi.push(new Trapezoid(0, 50, 180, 200), new Trapezoid(180, 200, 250, 260), new Trapezoid(250, 260, 400, 500));
glucoPost.push(new Trapezoid(0, 50, 140, 150), new Trapezoid(140, 150, 200, 210), new Trapezoid(200, 210, 400, 500));
hemoGli.push(new Trapezoid(-10, 0, 5.5, 5.6), new Trapezoid(5.5, 5.6, 6, 6.4), new Trapezoid(6, 6.4, 8.5, 10));
peso.push(new Trapezoid(-10, 0, 25, 30), new Trapezoid(25, 30, 45, 50), new Trapezoid(45, 50, 80, 100));

let object = {
    Normal: 0,
    Propenso: 0,
    PreDiabetes: 0,
    Diabetes: 0
};

// El objecto anterior se pasa al formato recibido por la libreria que ejecutara las reglas
var Values = function (glucoPreNormal, glucoPrePrediabetes, glucoPreDiabetes, glucoCapiNormal, glucoCapiPrediabetes, glucoCapiDiabetes, glucoPostNormal, glucoPostPrediabetes, glucoPostDiabetes, hemoGliNormal, hemoGliPrediabetes, hemoGliDiabetes, pesoNormal, pesoPrediabetes, pesoDiabetes, preNormal, prePrediabetes, preDiabetes, capiNormal, capiPrediabetes, capiDiabetes, postNormal, postPrediabetes, postDiabetes, gliNormal, gliPrediabetes, gliDiabetes, pNormal, pPrediabetes, pDiabetes) {
    this.glucoPreNormal = glucoPreNormal;
    this.glucoPrePrediabetes = glucoPrePrediabetes;
    this.glucoPreDiabetes = glucoPreDiabetes;
    this.glucoCapiNormal = glucoCapiNormal;
    this.glucoCapiPrediabetes = glucoCapiPrediabetes;
    this.glucoCapiDiabetes = glucoCapiDiabetes;
    this.glucoPostNormal = glucoPostNormal;
    this.glucoPostPrediabetes = glucoPostPrediabetes;
    this.glucoPostDiabetes = glucoPostDiabetes;
    this.hemoGliNormal = hemoGliNormal;
    this.hemoGliPrediabetes = hemoGliPrediabetes;
    this.hemoGliDiabetes = hemoGliDiabetes;
    this.pesoNormal = pesoNormal;
    this.pesoPrediabetes = pesoPrediabetes;
    this.pesoDiabetes = pesoDiabetes;
    this.preNormal = preNormal;
    this.prePrediabetes = prePrediabetes;
    this.preDiabetes = preDiabetes;
    this.capiNormal = capiNormal;
    this.capiPrediabetes = capiPrediabetes;
    this.capiDiabetes = capiDiabetes;
    this.postNormal = postNormal;
    this.postPrediabetes = postPrediabetes;
    this.postDiabetes = postDiabetes;
    this.gliNormal = gliNormal;
    this.gliPrediabetes = gliPrediabetes;
    this.gliDiabetes = gliDiabetes;
    this.pNormal = pNormal;
    this.pPrediabetes = pPrediabetes;
    this.pDiabetes = pDiabetes;
}

function convert(object) {

    // Arreglos donde se guardaran los valores desfuzificados
    let valoresPeso = [];
    let valoresPre = [];
    let valoresPost = [];
    let valoresCapi = [];
    let valoresHemo = [];

    for (const valor of glucoPre) {
        valoresPre.push(valor.fuzzify(object.preprandial_glucose));
    }
    for (const valor of glucoCapi) {
        valoresCapi.push(valor.fuzzify(object.capillar_glucose));
    }
    for (const valor of glucoPost) {
        valoresPost.push(valor.fuzzify(object.postprandial_glucose));
    }
    for (const valor of hemoGli) {
        valoresHemo.push(valor.fuzzify(object.glycosylated_hemoglobin));
    }
    for (const valor of peso) {
        valoresPeso.push(valor.fuzzify(object.peso));
    }

    let object2 = {

        "glucoPreNormal": "Normal",
        "glucoPrePrediabetes": "Prediabetes",
        "glucoPreDiabetes": "Diabetes",
        "glucoCapiNormal": "Normal",
        "glucoCapiPrediabetes": "Prediabetes",
        "glucoCapiDiabetes": "Diabetes",
        "glucoPostNormal": "Normal",
        "glucoPostPrediabetes": "Prediabetes",
        "glucoPostDiabetes": "Diabetes",
        "hemoGliNormal": "Normal",
        "hemoGliPrediabetes": "Prediabetes",
        "hemoGliDiabetes": "Diabetes",
        "pesoNormal": "Normal",
        "pesoPrediabetes": "Prediabetes",
        "pesoDiabetes": "Diabetes",
        "preNormal": valoresPre[0],
        "prePrediabetes": valoresPre[1],
        "preDiabetes": valoresPre[2],
        "capiNormal": valoresCapi[0],
        "capiPrediabetes": valoresCapi[1],
        "capiDiabetes": valoresCapi[2],
        "postNormal": valoresPost[0],
        "postPrediabetes": valoresPost[1],
        "postDiabetes": valoresPost[2],
        "gliNormal": valoresHemo[0],
        "gliPrediabetes": valoresHemo[1],
        "gliDiabetes": valoresHemo[2],
        "pNormal": valoresPeso[0],
        "pPrediabetes": valoresPeso[1],
        "pDiabetes": valoresPeso[2]
    }

    let values = new Values(object2.glucoPreNormal, object2.glucoPrePrediabetes, object2.glucoPreDiabetes, object2.glucoCapiNormal, object2.glucoCapiPrediabetes, object2.glucoCapiDiabetes, object2.glucoPostNormal, object2.glucoPostPrediabetes, object2.glucoPostDiabetes, object2.hemoGliNormal, object2.hemoGliPrediabetes, object2.hemoGliDiabetes, object2.pesoNormal, object2.pesoPrediabetes, object2.pesoDiabetes, object2.preNormal, object2.prePrediabetes, object2.preDiabetes, object2.capiNormal, object2.capiPrediabetes, object2.capiDiabetes, object2.postNormal, object2.postPrediabetes, object2.postDiabetes, object2.gliNormal, object2.gliPrediabetes, object2.gliDiabetes, object2.pNormal, object2.pPrediabetes, object2.pDiabetes);

    return values;
}

// Glucosa prenpandial Normal, Glucosa Capilar Normal, glucosa postpandial Normal, hemoglobina glicocilada y peso SE normal

// Se crea la instancia del objeto Json pero ya con la notacion de la libreria de las reglas
// let values = new Values(object.glucoPreNormal, object.glucoPrePrediabetes, object.glucoPreDiabetes, object.glucoCapiNormal, object.glucoCapiPrediabetes, object.glucoCapiDiabetes, object.glucoPostNormal, object.glucoPostPrediabetes, object.glucoPostDiabetes, object.hemoGliNormal, object.hemoGliPrediabetes, object.hemoGliDiabetes, object.pesoNormal, object.pesoPrediabetes, object.pesoDiabetes, object.preNormal, object.prePrediabetes, object.preDiabetes, object.capiNormal, object.capiPrediabetes, object.capiDiabetes, object.postNormal, object.postPrediabetes, object.postDiabetes, object.gliNormal, object.gliPrediabetes, object.gliDiabetes, object.pNormal, object.pPrediabetes, object.pDiabetes);

// Se crean todas las reglas que tengra el sistema difuso que sera en total 243 reglas.
var flow = nools.flow("DiagnosisFuzzy", function (flow) {
    flow.rule("Regla 1", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 1", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 1", descripcion: descriptions[0] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 2", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 2", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 2", descripcion: descriptions[1] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 3", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 3", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 3", descripcion: descriptions[2] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 4", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 4", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 4", descripcion: descriptions[3] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 5", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 5", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 5", descripcion: descriptions[4] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 6", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 6", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 6", descripcion: descriptions[5] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 7", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 7", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 7", descripcion: descriptions[6] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 8", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 8", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 8", descripcion: descriptions[7] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 9", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 9", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 9", descripcion: descriptions[8] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 10", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 10", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 10", descripcion: descriptions[9] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 11", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 11", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 11", descripcion: descriptions[10] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 12", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 12", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 12", descripcion: descriptions[11] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 13", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 13", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 13", descripcion: descriptions[12] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 14", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 14", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 14", descripcion: descriptions[13] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 15", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 15", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 15", descripcion: descriptions[14] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 16", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 16", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 16", descripcion: descriptions[15] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 17", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 17", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 17", descripcion: descriptions[16] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 18", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 18", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 18", descripcion: descriptions[17] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 19", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 19", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 19", descripcion: descriptions[18] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 20", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 20", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 20", descripcion: descriptions[19] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 21", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 21", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 21", descripcion: descriptions[20] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 22", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 22", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 22", descripcion: descriptions[21] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 23", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 23", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 23", descripcion: descriptions[22] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 24", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 24", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 24", descripcion: descriptions[23] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 25", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 25", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 25", descripcion: descriptions[24] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 26", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 26", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 26", descripcion: descriptions[25] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 27", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 27", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 27", descripcion: descriptions[26] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 28", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 28", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 28", descripcion: descriptions[27] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 29", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 29", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 29", descripcion: descriptions[28] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 30", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 30", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 30", descripcion: descriptions[29] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 31", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 31", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 31", descripcion: descriptions[30] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 32", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 32", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 32", descripcion: descriptions[31] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 33", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 33", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 33", descripcion: descriptions[32] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 34", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 34", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 34", descripcion: descriptions[33] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 35", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 35", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 35", descripcion: descriptions[34] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 36", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 36", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 36", descripcion: descriptions[35] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 37", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 37", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 37", descripcion: descriptions[36] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 38", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 38", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 38", descripcion: descriptions[37] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 39", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 39", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 39", descripcion: descriptions[38] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 40", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 40", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 40", descripcion: descriptions[39] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 41", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 41", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 41", descripcion: descriptions[40] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 42", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 42", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 42", descripcion: descriptions[41] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 43", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 43", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 43", descripcion: descriptions[42] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 44", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 44", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 44", descripcion: descriptions[43] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 45", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 45", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 45", descripcion: descriptions[44] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 46", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 46", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 46", descripcion: descriptions[45] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 47", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 47", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 47", descripcion: descriptions[46] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 48", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 48", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 48", descripcion: descriptions[47] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 49", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 49", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 49", descripcion: descriptions[48] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 50", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 50", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 50", descripcion: descriptions[49] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 51", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 51", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 51", descripcion: descriptions[50] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 52", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 52", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 52", descripcion: descriptions[51] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 53", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 53", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 53", descripcion: descriptions[52] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 54", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 54", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 54", descripcion: descriptions[53] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 55", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 55", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 55", descripcion: descriptions[54] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 56", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 56", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 56", descripcion: descriptions[55] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 57", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 57", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 57", descripcion: descriptions[56] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 58", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 58", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 58", descripcion: descriptions[57] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 59", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 59", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 59", descripcion: descriptions[58] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 60", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 60", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 60", descripcion: descriptions[59] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 61", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 61", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 61", descripcion: descriptions[60] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 62", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 62", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 62", descripcion: descriptions[61] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 63", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 63", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 63", descripcion: descriptions[62] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 64", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 64", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 64", descripcion: descriptions[63] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 65", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 65", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 65", descripcion: descriptions[64] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 66", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 66", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 66", descripcion: descriptions[65] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 67", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 67", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 67", descripcion: descriptions[66] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 68", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 68", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 68", descripcion: descriptions[67] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 69", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 69", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 69", descripcion: descriptions[68] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 70", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 70", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 70", descripcion: descriptions[69] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 71", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 71", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 71", descripcion: descriptions[70] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 72", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 72", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 72", descripcion: descriptions[71] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 73", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 73", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 73", descripcion: descriptions[72] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 74", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 74", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 74", descripcion: descriptions[73] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 75", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 75", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 75", descripcion: descriptions[74] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 76", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 76", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 76", descripcion: descriptions[75] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 77", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 77", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 77", descripcion: descriptions[76] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 78", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 78", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 78", descripcion: descriptions[77] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 79", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 79", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 79", descripcion: descriptions[78] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 80", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 80", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 80", descripcion: descriptions[79] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 81", [Values, "v", "v.glucoPreNormal == 'Normal' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preNormal, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 81", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 81", descripcion: descriptions[80] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 82", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 82", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 82", descripcion: descriptions[81] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 83", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 83", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 83", descripcion: descriptions[82] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 84", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 84", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 84", descripcion: descriptions[83] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 85", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 85", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 85", descripcion: descriptions[84] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 86", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 86", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 86", descripcion: descriptions[85] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 87", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 87", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 87", descripcion: descriptions[86] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 88", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 88", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 88", descripcion: descriptions[87] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 89", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 89", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 89", descripcion: descriptions[88] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 90", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 90", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 90", descripcion: descriptions[89] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 91", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 91", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 91", descripcion: descriptions[90] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 92", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 92", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 92", descripcion: descriptions[91] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 93", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 93", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 93", descripcion: descriptions[92] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 94", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 94", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 94", descripcion: descriptions[93] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 95", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 95", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 95", descripcion: descriptions[94] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 96", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 96", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 96", descripcion: descriptions[95] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 97", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 97", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 97", descripcion: descriptions[96] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 98", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 98", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 98", descripcion: descriptions[97] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 99", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 99", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 99", descripcion: descriptions[98] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 100", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 100", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 100", descripcion: descriptions[99] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 101", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 101", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 101", descripcion: descriptions[100] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 102", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 102", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 102", descripcion: descriptions[101] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 103", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 103", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 103", descripcion: descriptions[102] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 104", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 104", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 104", descripcion: descriptions[103] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 105", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 105", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 105", descripcion: descriptions[104] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 106", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 106", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 106", descripcion: descriptions[105] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 107", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 107", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 107", descripcion: descriptions[106] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 108", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 108", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 108", descripcion: descriptions[107] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 109", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 109", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 109", descripcion: descriptions[108] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 110", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 110", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 110", descripcion: descriptions[109] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 111", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 111", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 111", descripcion: descriptions[110] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 112", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 112", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 112", descripcion: descriptions[111] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 113", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 113", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 113", descripcion: descriptions[112] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 114", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 114", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 114", descripcion: descriptions[113] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 115", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 115", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 115", descripcion: descriptions[114] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 116", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 116", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 116", descripcion: descriptions[115] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 117", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 117", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 117", descripcion: descriptions[116] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 118", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 118", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 118", descripcion: descriptions[117] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 119", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 119", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 119", descripcion: descriptions[118] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 120", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 120", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 120", descripcion: descriptions[119] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 121", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 121", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 121", descripcion: descriptions[120] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 122", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 122", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 122", descripcion: descriptions[121] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 123", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 123", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 123", descripcion: descriptions[122] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 124", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 124", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 124", descripcion: descriptions[123] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 125", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 125", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 125", descripcion: descriptions[124] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 126", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 126", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 126", descripcion: descriptions[125] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 127", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 127", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 127", descripcion: descriptions[126] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 128", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 128", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 128", descripcion: descriptions[127] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 129", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 129", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 129", descripcion: descriptions[128] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 130", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 130", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 130", descripcion: descriptions[129] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 131", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 131", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 131", descripcion: descriptions[130] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 132", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 132", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 132", descripcion: descriptions[131] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 133", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 133", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 133", descripcion: descriptions[132] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 134", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 134", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 134", descripcion: descriptions[133] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 135", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 135", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 135", descripcion: descriptions[134] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 136", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 136", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 136", descripcion: descriptions[135] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 137", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 137", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 137", descripcion: descriptions[136] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 138", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 138", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 138", descripcion: descriptions[137] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 139", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 139", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 139", descripcion: descriptions[138] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 140", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 140", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 140", descripcion: descriptions[139] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 141", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 141", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 141", descripcion: descriptions[140] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 142", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 142", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 142", descripcion: descriptions[141] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 143", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 143", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 143", descripcion: descriptions[142] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 144", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 144", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 144", descripcion: descriptions[143] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 145", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 145", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 145", descripcion: descriptions[144] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 146", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 146", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 146", descripcion: descriptions[145] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 147", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 147", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 147", descripcion: descriptions[146] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 148", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 148", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 148", descripcion: descriptions[147] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 149", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 149", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 149", descripcion: descriptions[148] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 150", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 150", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 150", descripcion: descriptions[149] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 151", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 151", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 151", descripcion: descriptions[150] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 152", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 152", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 152", descripcion: descriptions[151] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 153", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 153", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 153", descripcion: descriptions[152] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 154", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 154", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 154", descripcion: descriptions[153] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 155", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 155", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 155", descripcion: descriptions[154] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 156", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 156", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 156", descripcion: descriptions[155] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 157", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 157", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 157", descripcion: descriptions[156] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 158", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 158", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 158", descripcion: descriptions[157] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 159", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 159", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 159", descripcion: descriptions[158] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 160", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 160", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 160", descripcion: descriptions[159] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 161", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 161", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 161", descripcion: descriptions[160] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 162", [Values, "v", "v.glucoPrePrediabetes == 'Prediabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.prePrediabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 162", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 162", descripcion: descriptions[161] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 163", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 163", minimo); if (!object.hasOwnProperty("Normal")) { object.Normal = minimo; Diagnostico = "Normal" } else if (minimo > object.Normal) { object.Normal = minimo; activadas.push({ regla: "Regla 163", descripcion: descriptions[162] }); Diagnostico = "Normal"; } });
    flow.rule("Regla 164", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 164", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 164", descripcion: descriptions[163] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 165", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 165", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 165", descripcion: descriptions[164] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 166", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 166", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 166", descripcion: descriptions[165] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 167", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 167", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 167", descripcion: descriptions[166] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 168", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 168", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 168", descripcion: descriptions[167] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 169", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 169", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 169", descripcion: descriptions[168] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 170", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 170", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 170", descripcion: descriptions[169] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 171", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 171", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 171", descripcion: descriptions[170] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 172", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 172", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 172", descripcion: descriptions[171] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 173", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 173", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 173", descripcion: descriptions[172] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 174", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 174", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 174", descripcion: descriptions[173] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 175", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 175", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 175", descripcion: descriptions[174] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 176", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 176", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 176", descripcion: descriptions[175] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 177", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 177", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 177", descripcion: descriptions[176] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 178", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 178", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 178", descripcion: descriptions[177] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 179", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 179", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 179", descripcion: descriptions[178] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 180", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 180", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 180", descripcion: descriptions[179] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 181", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 181", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 181", descripcion: descriptions[180] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 182", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 182", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 182", descripcion: descriptions[181] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 183", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 183", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 183", descripcion: descriptions[182] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 184", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 184", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 184", descripcion: descriptions[183] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 185", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 185", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 185", descripcion: descriptions[184] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 186", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 186", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 186", descripcion: descriptions[185] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 187", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 187", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 187", descripcion: descriptions[186] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 188", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 188", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 188", descripcion: descriptions[187] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 189", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiNormal == 'Normal' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiNormal, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 189", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 189", descripcion: descriptions[188] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 190", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 190", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 190", descripcion: descriptions[189] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 191", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 191", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 191", descripcion: descriptions[190] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 192", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 192", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 192", descripcion: descriptions[191] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 193", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 193", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 193", descripcion: descriptions[192] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 194", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 194", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 194", descripcion: descriptions[193] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 195", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 195", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 195", descripcion: descriptions[194] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 196", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 196", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 196", descripcion: descriptions[195] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 197", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 197", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 197", descripcion: descriptions[196] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 198", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 198", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 198", descripcion: descriptions[197] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 199", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 199", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 199", descripcion: descriptions[198] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 200", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 200", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 200", descripcion: descriptions[199] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 201", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 201", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 201", descripcion: descriptions[200] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 202", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 202", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 202", descripcion: descriptions[201] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 203", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 203", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 203", descripcion: descriptions[202] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 204", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 204", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 204", descripcion: descriptions[203] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 205", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 205", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 205", descripcion: descriptions[204] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 206", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 206", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 206", descripcion: descriptions[205] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 207", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 207", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 207", descripcion: descriptions[206] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 208", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 208", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 208", descripcion: descriptions[207] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 209", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 209", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 209", descripcion: descriptions[208] }); Diagnostico = "PreDiabetes" } });
    flow.rule("Regla 210", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 210", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 210", descripcion: descriptions[209] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 211", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 211", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 211", descripcion: descriptions[210] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 212", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 212", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 212", descripcion: descriptions[211] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 213", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 213", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 213", descripcion: descriptions[212] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 214", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 214", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 214", descripcion: descriptions[213] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 215", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 215", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 215", descripcion: descriptions[214] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 216", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiPrediabetes == 'Prediabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiPrediabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 216", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 216", descripcion: descriptions[215] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 217", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 217", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 217", descripcion: descriptions[216] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 218", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 218", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 218", descripcion: descriptions[217] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 219", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 219", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 219", descripcion: descriptions[218] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 220", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 220", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 220", descripcion: descriptions[219] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 221", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 221", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 221", descripcion: descriptions[220] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 222", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 222", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 222", descripcion: descriptions[221] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 223", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 223", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 223", descripcion: descriptions[222] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 224", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 224", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 224", descripcion: descriptions[223] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 225", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostNormal == 'Normal' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postNormal, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 225", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 225", descripcion: descriptions[224] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 226", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 226", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 226", descripcion: descriptions[225] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 227", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 227", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 227", descripcion: descriptions[226] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 228", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 228", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 228", descripcion: descriptions[227] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 229", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 229", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 229", descripcion: descriptions[228] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 230", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 230", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 230", descripcion: descriptions[229] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 231", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 231", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 231", descripcion: descriptions[230] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 232", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 232", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 232", descripcion: descriptions[231] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 233", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 233", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 233", descripcion: descriptions[232] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 234", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostPrediabetes == 'Prediabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postPrediabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 234", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 234", descripcion: descriptions[233] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 235", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pNormal); console.log("Regla 235", minimo); if (!object.hasOwnProperty("Propenso")) { object.Propenso = minimo; Diagnostico = "Propenso" } else if (minimo > object.Propenso) { object.Propenso = minimo; activadas.push({ regla: "Regla 235", descripcion: descriptions[234] }); Diagnostico = "Propenso"; } });
    flow.rule("Regla 236", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pPrediabetes); console.log("Regla 236", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 236", descripcion: descriptions[235] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 237", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliNormal == 'Normal' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliNormal, facts.v.pDiabetes); console.log("Regla 237", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 237", descripcion: descriptions[236] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 238", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pNormal); console.log("Regla 238", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 238", descripcion: descriptions[237] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 239", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pPrediabetes); console.log("Regla 239", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 239", descripcion: descriptions[238] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 240", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliPrediabetes == 'Prediabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliPrediabetes, facts.v.pDiabetes); console.log("Regla 240", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 240", descripcion: descriptions[239] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 241", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoNormal == 'Normal'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pNormal); console.log("Regla 241", minimo); if (!object.hasOwnProperty("PreDiabetes")) { object.PreDiabetes = minimo; Diagnostico = "PreDiabetes" } else if (minimo > object.PreDiabetes) { object.PreDiabetes = minimo; activadas.push({ regla: "Regla 241", descripcion: descriptions[240] }); Diagnostico = "PreDiabetes"; } });
    flow.rule("Regla 242", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoPrediabetes == 'Prediabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pPrediabetes); console.log("Regla 242", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 242", descripcion: descriptions[241] }); Diagnostico = "Diabetes"; } });
    flow.rule("Regla 243", [Values, "v", "v.glucoPreDiabetes == 'Diabetes' && v.glucoCapiDiabetes == 'Diabetes' && v.glucoPostDiabetes == 'Diabetes' && v.hemoGliDiabetes == 'Diabetes' && v.pesoDiabetes == 'Diabetes'"], function (facts) { var minimo = Math.min(facts.v.preDiabetes, facts.v.capiDiabetes, facts.v.postDiabetes, facts.v.gliDiabetes, facts.v.pDiabetes); console.log("Regla 243", minimo); if (!object.hasOwnProperty("Diabetes")) { object.Diabetes = minimo; Diagnostico = "Diabetes" } else if (minimo > object.Diabetes) { object.Diabetes = minimo; activadas.push({ regla: "Regla 243", descripcion: descriptions[242] }); Diagnostico = "Diabetes"; } });
});

var session = flow.getSession();

function execute(session, objecto, result, res) {

    let values = convert(objecto);

    session.assert(values);

    let pato;

    session.match().then(
        function () {
            let valor = centroide(object);
            //Se hace el metodo del centroide para hallar la salida del sistema difuso
            result["Valor del sistema difuso"] = valor;
            result["Reglas activadas SD"] = activadas;
            if (valor > 0 && valor <= 25) {
                Diagnostico = "Normal";
            } else if (valor > 25 && valor <= 50) {
                Diagnostico = "Propenso";
            } else if (valor > 50 && valor <= 75) {
                Diagnostico = "PreDiabetes";
            } else {
                Diagnostico = "Diabetes";
            }
            result["Diagnostico de SD"] = Diagnostico;
            session.dispose();
            session = flow.getSession();
            res.status(200).json(result);
            activadas = [];
            object.Normal = 0;
            object.Propenso = 0;
            object.PreDiabetesm = 0;
            object.Diabetes = 0;
        },
        function (err) {
            console.log("Error matchUntilHalt()", err.stack);
        }
    );

    return 'Este es el peso ' + pato;
}

function centroide(object) {
    let valor = 0;

    valor = (12.5 * object.Normal + 37.5 * object.Propenso + 62.5 * object.PreDiabetes + 87.5 * object.Diabetes) / (object.Normal + object.Propenso + object.PreDiabetes + object.Diabetes);

    return valor;
}

module.exports = {
    flow,
    execute,
    convert,
    centroide
}




















// let velocidad = [];
// let angulo = [];

// /* console.log(triangle.fuzzify(515));
// console.log(trapezoid.fuzzify(-2.5)); */

// let rulesDataVel = [];
// let rulesDataAng = [];

// let vel = 515;
// let ang = -2.5;

// // Grafica para la velocidad
// velocidad.push(new Trapezoid(-10, 0, 450, 500));
// velocidad.push(new Triangle(450, 550, 700, 0));
// velocidad.push(new Triangle(550, 850, 1000, 1500));

// // Grafica para el angulo
// angulo.push(new Trapezoid(-20, -10, -5, 0));
// angulo.push(new Triangle(-5, 0, 5));
// angulo.push(new Trapezoid(0, 5, 10, 20));

// for (const grafica of velocidad) {
//     rulesDataVel.push(grafica.fuzzify(vel));
// }

// for (const grafica of angulo) {
//     rulesDataAng.push(grafica.fuzzify(ang));
// }


// console.log(velocidad, rulesDataVel);
// console.log(angulo, rulesDataAng);





